    // do not edit this file
    .arch armv6             // armv6 architecture
    .arm                    // arm 32-bit instruction set
    .fpu vfp                // floating point co-processor
    .syntax unified         // modern sytax

    // global constants
    #include "cw.h"

    // name imports
    .extern     buffer

    .text
    //////////////////////////////////////////////////////
    // int rd(void)                                     //
    //////////////////////////////////////////////////////

    .global rd                      // global for linking to
    .type   rd, %function           // define as a function
    .equ    OSREAD, 3               // syscall # for read() 
    .equ    FP_OFF, 12              // fp offset in main stack frame

rd:
    // function prologue
    push    {r6, r7, fp, lr}        // save fp and lr on stack
    add     fp, sp, FP_OFF          // set frame pointer to frame base

    mov     r0, 0
    ldr     r1, =buffer
    mov     r2, BUFSZ
    mov     r7, OSREAD
    svc     0
    
    // function epilogue
    sub     sp, fp, FP_OFF          // restore stack frame top
    pop     {r6, r7, fp, lr}        // remove frame and restore
    bx      lr                      // return to caller

    // function footer
    .size   rd, (. - rd)            // set size for function
.end
